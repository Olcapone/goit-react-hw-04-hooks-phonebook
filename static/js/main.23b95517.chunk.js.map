{"version":3,"sources":["utils/UseLocalStorage.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","ContactForm","onSubmit","stateName","setName","number","setNumber","reset","handleChange","e","target","name","value","className","s","form","preventDefault","label","input","type","pattern","title","required","onChange","button","ContactList","date","onDelete","list","map","item","onClick","shortid","generate","Filter","wrap","App","id","contacts","setContacts","filter","setFilter","visibleContact","length","normalizetext","toLowerCase","contact","includes","findContact","props","newContact","find","alert","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.23b95517.chunk.js","sourcesContent":["import {  useEffect, useState  } from \"react\";\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state))\r\n  }, [key, state]);\r\n      \r\n  return [state, setState]\r\n};\r\n\r\nexport default useLocalStorage;","//import React, {  useEffect, useState  } from \"react\";\nimport s from \"./ContactForm.module.css\";\nimport useLocalStorage from '../../utils/UseLocalStorage';\n\nfunction ContactForm ({onSubmit}) {\n\n  const [stateName, setName] = useLocalStorage(\"stateName\", '');\n  const [number, setNumber] = useLocalStorage('number', '');\n\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n \n  };\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n    else if(name === 'number'){\n      setNumber(value);\n    };\n  };\n\n   const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({stateName, number});\n\n    reset();\n  };\n\n // render() {\n    return (\n      <form className={s.form} onSubmit={handleSubmit} >\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={stateName}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\" onSubmit={reset}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n\n\nexport default ContactForm;\n","import React from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList({ date, onDelete }) {\n  return (\n    <ul className={s.list}>\n      {date.map(({ name, number }) => (\n        <li className={s.item} key={shortid.generate()}>\n          {name} : {number}{\" \"}\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDelete(name)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from \"react\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n\n  \n  return (\n    <div className={s.wrap}>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","//import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport useLocalStorage from './utils/UseLocalStorage';\n\nfunction App ()  {\n\n  const [contacts, setContacts] = useLocalStorage(\"contacts\",\n  [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ]);\n  const [filter, setFilter] = useLocalStorage('filter', '');\n\n  const addContact = (props) => {\n    \n    const { stateName, number } = props;\n\n    const newContact = {\n      id: shortid.generate(),\n      name: stateName,\n      number: number,\n    };\n\n    const checkContact = contacts.find((contact) => contact.name.includes(stateName));\n  \n    if (checkContact) {\n      alert(\"its contact already added\");\n    } else {\n      setContacts([newContact, ...contacts]);\n    }\n  };\n\n  const findContact = () => {\n    const normalizetext = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizetext)\n    );\n  };\n\n  const changeFilter = (e) => {\n    const {  value } = e.currentTarget;\n    setFilter( value );\n  };\n\n  const deleteContact = (name) => {\n    setContacts( contacts.filter((contact) => contact.name !== name) );\n  };\n  \n\n    let visibleContact = filter.length === 0 ? contacts : findContact();\n\n    return (\n      <section className=\"mainSection\">\n        <h1 className=\"mainTitle\">\n          <span className=\"logo\">P</span>honebook\n        </h1>\n        <ContactForm onSubmit={addContact} />\n\n        <h2 className=\"mainTitle\">Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList date={visibleContact} onDelete={deleteContact} />\n      </section>\n    );\n  }\n\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2deif\",\"label\":\"ContactForm_label__1-Jfp\",\"input\":\"ContactForm_input__24UZ6\",\"button\":\"ContactForm_button__37cM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2E7j8\",\"item\":\"ContactList_item__11v-_\",\"button\":\"ContactList_button__2nhjn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__2qF8R\",\"wrap\":\"Filter_wrap__20gHf\",\"input\":\"Filter_input__2lYVH\"};"],"sourceRoot":""}